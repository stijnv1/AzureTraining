{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {

    "StorageAccountName": {
      "type": "string",
      "defaultValue": "stasverho1982",
      "metadata": {
        "Description": "Name of the storage account"
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },

    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },

    "vnetName": {
      "type": "string",
      "defaultValue": "OpsTrainingVNET",
      "metadata": {
        "Description": "VNET Name"
      }
    },

    "vnetSubnetName": {
      "type": "string",
      "defaultValue": "Apps",
      "metadata": {
        "Description": "VNET Subnet Name"
      }
    },

    "vmName": {
      "type": "string",
      "defaultValue": "vm1",
      "metadata": {
        "Description": "Name of the VM"
      }
    },

    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "Description": "Size of the VM"
      }
    },

    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },

    "vnetRG": {
      "type": "string",
      "metadata": {
        "Description": "Name of the RG of the VNET"
      }
    },

    "NSGName": {
      "type": "string",
      "metadata": {
        "Description": "Name of the Network Security Group which must be assigned to VM"
      }
    },

    "AS_TESTVMsName": {
      "type": "string",
      "minLength": 1
    },

    "modulesUrl": {
      "type": "string",
      "minLength": 1
    },

    "configurationFunction": {
      "type": "string",
      "minLength": 1
    }
  },

  "variables": {
    "sizeOfDiskInGB": "100",
    "dataDisk1VhdName": "[concat(parameters('vmName'),'_DataDisk1')]",
    "OSDiskName": "[concat(parameters('vmName'),'_OSDisk')]",
    "nicName": "[concat(parameters('vmName'),'_VNIC')]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(parameters('vmName'),'_PublicIP')]",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceid(parameters('vnetRG'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "subnetID": "[concat(variables('vnetID'),'/subnets/', parameters('vnetSubnetName'))]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "NSGID": "[resourceid(parameters('vnetRG'),'Microsoft.Network/networkSecurityGroups',parameters('NSGName'))]"
  },

  "resources": [
    {
      "name": "[parameters('AS_TESTVMsName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "properties": {
        "platformUpdateDomainCount": 1,
        "platformFaultDomainCount": 1
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('StorageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('NSGID')]"
        }
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('StorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Microsoft.Compute/availabilitySets',parameters('AS_TESTVMsName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('sizeOfDiskInGB')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('dataDisk1VhdName'),'.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/', '/Microsoft.PowerShell.DSC')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[parameters('modulesUrl')]",
          "ConfigurationFunction": "[parameters('configurationFunction')]",
          "Properties": {
            "MachineName": "[parameters('vmName')]"
          }
        },
        "protectedSettings": null
      }
    }
  ],
    "outputs": {
    }
}
